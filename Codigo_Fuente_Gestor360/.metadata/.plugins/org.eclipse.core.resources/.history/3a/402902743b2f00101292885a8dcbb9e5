package other_windows;

import java.awt.*;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import main.login_window;

public class Settings extends JFrame {

    private static final long serialVersionUID = 1L;
    private JPanel contentPane;
    private JPasswordField txt_AntPasswd, txt_NewPasswd, txt_RepNewPasswd;

    public Settings() {
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setBounds(100, 100, 500, 450);
        setLocationRelativeTo(null);
        setTitle("Configuración");

        contentPane = new JPanel();
        contentPane.setBackground(new Color(24, 41, 88));
        contentPane.setBorder(new EmptyBorder(25, 25, 25, 25));
        setContentPane(contentPane);
        contentPane.setLayout(new GridBagLayout());

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.NONE;
        gbc.anchor = GridBagConstraints.CENTER;
        gbc.weightx = 0;

        // Título
        JLabel title = new JLabel("Configuración");
        title.setForeground(Color.WHITE);
        title.setFont(new Font("Segoe UI", Font.BOLD, 32));
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.insets = new Insets(0, 0, 30, 0);
        contentPane.add(title, gbc);

        // Subtítulo
        JLabel lblPassTitle = new JLabel("Cambiar contraseña");
        lblPassTitle.setForeground(Color.WHITE);
        lblPassTitle.setFont(new Font("Segoe UI", Font.BOLD, 18));
        gbc.gridy = 1;
        gbc.insets = new Insets(0, 0, 20, 0);
        contentPane.add(lblPassTitle, gbc);

        // Campos
        txt_AntPasswd = createPasswordField("Contraseña actual", gbc, 2);
        txt_NewPasswd = createPasswordField("Nueva contraseña", gbc, 4);
        txt_RepNewPasswd = createPasswordField("Repetir contraseña", gbc, 6);

        // Botón aplicar
        JButton btnAplicar = createButton("Aplicar", gbc, 8);
        btnAplicar.addActionListener(e -> aplicarConfiguracion());

        // Botón cancelar
        JButton btnCancelar = createButton("Cancelar", gbc, 9);
        btnCancelar.addActionListener(e -> {
            new main.main_window().setVisible(true);
            dispose();
        });

        // Botón cerrar sesión
        JButton btnCerrarSesion = createButton("Cerrar sesión", gbc, 10);
        btnCerrarSesion.addActionListener(e -> {
            for (Window window : Window.getWindows()) {
                window.dispose();
            }
            new login_window().setVisible(true);
        });
    }

    private JPasswordField createPasswordField(String placeholder, GridBagConstraints gbc, int gridy) {
        JLabel lbl = new JLabel(placeholder);
        lbl.setForeground(Color.WHITE);
        lbl.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        gbc.gridy = gridy;
        gbc.insets = new Insets(5, 0, 5, 0);
        contentPane.add(lbl, gbc);

        JPasswordField field = new JPasswordField();
        field.setFont(new Font("Segoe UI", Font.PLAIN, 16));
        field.setPreferredSize(new Dimension(300, 35));
        field.setMaximumSize(new Dimension(320, 35)); // Para los campos
        gbc.gridy = gridy + 1;
        gbc.insets = new Insets(0, 0, 15, 0);
        gbc.fill = GridBagConstraints.NONE;
        gbc.anchor = GridBagConstraints.CENTER;
        contentPane.add(field, gbc);

        return field;
    }

    private JButton createButton(String text, GridBagConstraints gbc, int gridy) {
        JButton btn = new JButton(text);
        btn.setBackground(new Color(128, 0, 128));
        btn.setForeground(Color.WHITE);
        btn.setFont(new Font("Segoe UI", Font.BOLD, 14));
        btn.setFocusPainted(false);
        btn.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btn.setPreferredSize(new Dimension(150, 35));
        btn.setMaximumSize(new Dimension(180, 35)); // Limita el tamaño al maximizar
        gbc.gridy = gridy;
        gbc.insets = new Insets(15, 0, 10, 0);
        gbc.fill = GridBagConstraints.NONE;
        gbc.anchor = GridBagConstraints.CENTER;

        contentPane.add(btn, gbc);
        return btn;
    }


    private void aplicarConfiguracion() {
        String antigua = String.valueOf(txt_AntPasswd.getPassword());
        String nueva = String.valueOf(txt_NewPasswd.getPassword());
        String repetida = String.valueOf(txt_RepNewPasswd.getPassword());

        if (antigua.isEmpty() || nueva.isEmpty() || repetida.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Todos los campos de contraseña son obligatorios",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!nueva.equals(repetida)) {
            JOptionPane.showMessageDialog(this,
                    "Las contraseñas nuevas no coinciden",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (nueva.length() < 8) {
            JOptionPane.showMessageDialog(this,
                    "La contraseña debe tener mínimo 8 caracteres",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!antigua.equals(login_window.storedPassword)) {
            JOptionPane.showMessageDialog(this,
                    "La contraseña actual no es correcta",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        login_window.updatePassword(nueva);
        JOptionPane.showMessageDialog(this,
                "Contraseña actualizada con éxito.\nPor seguridad se cerrará la sesión.",
                "Éxito", JOptionPane.INFORMATION_MESSAGE);

        for (Window window : Window.getWindows()) {
            window.dispose();
        }
        new login_window().setVisible(true);
    }
}
