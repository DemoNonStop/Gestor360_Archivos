package other_windows;

import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.*;
import javax.swing.border.AbstractBorder;
import javax.swing.border.EmptyBorder;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;

public class Expenses extends JFrame {

    private static final long serialVersionUID = 1L;
    private JPanel contentPane;

    public Expenses(boolean maximized) {
        setTitle("Gestor360 - Gastos");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 1086, 600);
        if (maximized) {
            setExtendedState(JFrame.MAXIMIZED_BOTH);
        }
        setLocationRelativeTo(null);

        contentPane = new JPanel(new BorderLayout(10, 10));
        contentPane.setBackground(new Color(245, 245, 255));
        contentPane.setBorder(new EmptyBorder(15, 15, 15, 15));
        setContentPane(contentPane);

        addHeader();
        addSidebar();
        addChartPanel();  // A√±adir el panel de gr√°ficos con solo dos gr√°ficos
        addFooter();
    }

    private void addHeader() {
        JPanel headerPanel = new JPanel(new BorderLayout());
        headerPanel.setBackground(new Color(0, 128, 255));

        JLabel lblTitle = new JLabel("üìà An√°lisis de Gastos", SwingConstants.CENTER);
        lblTitle.setFont(new Font("Segoe UI Emoji", Font.BOLD, 22));
        lblTitle.setForeground(Color.WHITE);
        headerPanel.add(lblTitle, BorderLayout.CENTER);

        JButton btnBack = new JButton("‚Üê Volver");
        btnBack.setFont(new Font("Segoe UI", Font.BOLD, 14));
        btnBack.setBackground(new Color(108, 99, 255));
        btnBack.setForeground(Color.WHITE);
        btnBack.setFocusPainted(false);
        btnBack.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnBack.addActionListener(e -> {
            new main.main_window(getExtendedState() == JFrame.MAXIMIZED_BOTH).setVisible(true);
            dispose();
        });
        headerPanel.add(btnBack, BorderLayout.WEST);
        contentPane.add(headerPanel, BorderLayout.NORTH);
    }

    private void addSidebar() {
        JPanel sidebar = new JPanel();
        sidebar.setLayout(new GridLayout(6, 1, 10, 10));
        sidebar.setBackground(new Color(245, 247, 250));
        sidebar.setBorder(new EmptyBorder(10, 10, 10, 10));

        sidebar.add(createSidebarButton("üì¶ Stock", () -> openWindow(new Stock(getExtendedState() == JFrame.MAXIMIZED_BOTH))));
        sidebar.add(createSidebarButton("üõí Compras", () -> openWindow(new Purchases(getExtendedState() == JFrame.MAXIMIZED_BOTH))));
        sidebar.add(createSidebarButton("üìà Ventas", () -> openWindow(new Sales(getExtendedState() == JFrame.MAXIMIZED_BOTH))));
        sidebar.add(createSidebarButton("üìä Reportes", () -> openWindow(new Reports(getExtendedState() == JFrame.MAXIMIZED_BOTH))));
        sidebar.add(createSidebarButton("üë• Clientes", () -> openWindow(new Clients(getExtendedState() == JFrame.MAXIMIZED_BOTH))));

        contentPane.add(sidebar, BorderLayout.WEST);
    }

    private void addChartPanel() {
        JPanel chartContainer = new JPanel(new GridLayout(1, 2, 10, 10));
        chartContainer.setBackground(new Color(244, 246, 249));

        // Aqu√≠ solo dejamos dos gr√°ficos, seg√∫n lo que pediste
        chartContainer.add(createChartPanel("Compras de Stock", new double[]{1200, 1500, 1100, 1300, 1700, 1600}));
        chartContainer.add(createChartPanel("Gastos Operativos", new double[]{800, 950, 700, 850, 1100, 1050}));

        // Puedes agregar m√°s gr√°ficos en las otras dos posiciones si lo necesitas m√°s tarde
        contentPane.add(chartContainer, BorderLayout.CENTER);
    }

    private JPanel createChartPanel(String title, double[] values) {
        String[] meses = {"Ene", "Feb", "Mar", "Abr", "May", "Jun"};
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (int i = 0; i < meses.length; i++) {
            dataset.addValue(values[i], title, meses[i]);
        }

        JFreeChart chart = ChartFactory.createLineChart(title, "Mes", "Euros (‚Ç¨)", dataset);
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new Dimension(350, 250)); // Tama√±o m√°s peque√±o

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        panel.add(chartPanel, BorderLayout.CENTER);
        return panel;
    }

    private void addFooter() {
        JPanel footerPanel = new JPanel(new BorderLayout());
        footerPanel.setBackground(new Color(230, 230, 230));
        footerPanel.setBorder(new EmptyBorder(8, 15, 8, 15));

        JLabel lblUser = new JLabel("üë§ Usuario conectado: admin");
        lblUser.setFont(new Font("Segoe UI Emoji", Font.PLAIN, 14));

        JLabel lblFechaHora = new JLabel();
        lblFechaHora.setFont(new Font("Segoe UI Emoji", Font.PLAIN, 14));
        lblFechaHora.setHorizontalAlignment(SwingConstants.RIGHT);

        Timer timer = new Timer(1000, e -> {
            lblFechaHora.setText("üìÖ " + java.time.LocalDateTime.now()
                    .format(java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy - HH:mm:ss")));
        });
        timer.start();

        footerPanel.add(lblUser, BorderLayout.WEST);
        footerPanel.add(lblFechaHora, BorderLayout.EAST);
        contentPane.add(footerPanel, BorderLayout.SOUTH);
    }

    private JButton createSidebarButton(String text, Runnable action) {
        JButton button = new JButton(text);
        button.setFont(new Font("Segoe UI Emoji", Font.BOLD, 17));
        button.setBackground(new Color(0, 91, 150));
        button.setForeground(Color.WHITE);
        button.setFocusPainted(false);
        button.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        button.setPreferredSize(new Dimension(200, 48));
        button.setBorder(new RoundedBorder(12));
        button.addActionListener(e -> action.run());

        button.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent e) {
                button.setBackground(new Color(0, 70, 120));
            }

            public void mouseExited(MouseEvent e) {
                button.setBackground(new Color(0, 91, 150));
            }
        });

        return button;
    }

    private void openWindow(JFrame frame) {
        frame.setVisible(true);
        dispose();
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(() -> {
            Expenses frame = new Expenses(false);
            frame.setVisible(true);
        });
    }
    
    private static class RoundedBorder extends AbstractBorder {
        private final int radius;

        public RoundedBorder(int radius) {
            this.radius = radius;
        }

        @Override
        public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
            Graphics2D g2 = (Graphics2D) g;
            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            g2.setColor(Color.GRAY);  // Aqu√≠ puedes cambiar el color de borde si lo deseas
            g2.drawRoundRect(x, y, width - 1, height - 1, radius, radius);
        }
    }

}
