
package other_windows;

import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import javax.swing.*;
import javax.swing.border.*;
import javax.swing.table.DefaultTableModel;

import database.conecctionSQL;
import main.MainPanelPlaceholder;
import main.main_window;

public class SalesPanel extends JPanel {

    private static final long serialVersionUID = 1L;
    private JPanel contentPane;
    private JTable table_sales;
    private DefaultTableModel model;
    private JTextField txt_ID_Delete, txt_Add_ID, txt_AddProduct, txt_AddAmount, txt_AddPriceUnit, txt_AddDateSale, txt_Search;
    private main_window mainWindow;

    public SalesPanel(main_window mainWindow) {
        this.mainWindow = mainWindow;

        setLayout(new BorderLayout());
        setBackground(new Color(245, 245, 255));

        contentPane = new JPanel(new BorderLayout(10, 10));
        contentPane.setBackground(new Color(245, 245, 255));
        contentPane.setBorder(new EmptyBorder(15, 15, 15, 15));
        add(contentPane, BorderLayout.CENTER);

        addHeader();
        addCenterPanel();
        loadSales();
    }

    private void addHeader() {
        JPanel headerPanel = new JPanel(new BorderLayout());
        headerPanel.setBackground(new Color(0, 128, 255));

        JLabel lblTitle = new JLabel("📈 Gestión de Ventas", SwingConstants.CENTER);
        lblTitle.setFont(new Font("Segoe UI Emoji", Font.BOLD, 24));
        lblTitle.setForeground(Color.WHITE);

        JButton btnBack = new JButton("← Volver");
        btnBack.setFocusPainted(false);
        btnBack.setBackground(new Color(0, 91, 150));
        btnBack.setForeground(Color.WHITE);
        btnBack.setFont(new Font("Segoe UI", Font.BOLD, 14));
        btnBack.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnBack.addActionListener(e -> mainWindow.setMainContent(new MainPanelPlaceholder()));

        headerPanel.add(lblTitle, BorderLayout.CENTER);
        headerPanel.add(btnBack, BorderLayout.WEST);
        contentPane.add(headerPanel, BorderLayout.NORTH);
    }

    private void addCenterPanel() {
        JPanel center = new JPanel(new BorderLayout(10, 10));
        center.setBackground(new Color(244, 246, 249));

        model = new DefaultTableModel(new String[]{"ID", "Producto", "Cantidad", "P/U (€)", "Total (€)", "Fecha"}, 0);
        table_sales = new JTable(model);
        table_sales.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting() && table_sales.getSelectedRow() != -1) {
                int fila = table_sales.getSelectedRow();
                txt_Add_ID.setText(model.getValueAt(fila, 0).toString());
                txt_AddProduct.setText(model.getValueAt(fila, 1).toString());
                txt_AddAmount.setText(model.getValueAt(fila, 2).toString());
                txt_AddPriceUnit.setText(model.getValueAt(fila, 3).toString());
                txt_AddDateSale.setText(model.getValueAt(fila, 5).toString());
            }
        });
        JScrollPane scrollPane = new JScrollPane(table_sales);
        center.add(scrollPane, BorderLayout.CENTER);

        JPanel fieldsPanel = new JPanel(new GridBagLayout());
        fieldsPanel.setBackground(new Color(244, 246, 249));
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(5, 10, 5, 10);
        gbc.fill = GridBagConstraints.HORIZONTAL;

        String[] labels = {"ID:", "Producto:", "Cantidad:", "Precio/U:", "Fecha:"};
        JTextField[] fields = {
            txt_Add_ID = new JTextField(),
            txt_AddProduct = new JTextField(),
            txt_AddAmount = new JTextField(),
            txt_AddPriceUnit = new JTextField(),
            txt_AddDateSale = new JTextField()
        };

        for (int i = 0; i < labels.length; i++) {
            gbc.gridx = 0;
            gbc.gridy = i;
            gbc.weightx = 0.2;
            JLabel lbl = new JLabel(labels[i]);
            lbl.setFont(new Font("Segoe UI", Font.BOLD, 14));
            fieldsPanel.add(lbl, gbc);

            gbc.gridx = 1;
            gbc.weightx = 0.8;
            fields[i].setFont(new Font("Segoe UI", Font.PLAIN, 14));
            fields[i].setPreferredSize(new Dimension(200, 30));
            fieldsPanel.add(fields[i], gbc);
        }

        gbc.gridx = 0;
        gbc.gridy = labels.length;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.CENTER;

        JButton btnAdd = new JButton("➕ Añadir Venta");
        btnAdd.setFont(new Font("Segoe UI Emoji", Font.BOLD, 14));
        btnAdd.setBackground(new Color(0, 128, 255));
        btnAdd.setForeground(Color.WHITE);
        btnAdd.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnAdd.setFocusPainted(false);
        btnAdd.setPreferredSize(new Dimension(180, 35));
        btnAdd.addActionListener(e -> addSale());
        fieldsPanel.add(btnAdd, gbc);

        gbc.gridy++;
        JButton btnDelete = new JButton("🗑 Eliminar");
        btnDelete.setFont(new Font("Segoe UI Emoji", Font.BOLD, 14));
        btnDelete.setBackground(new Color(200, 0, 0));
        btnDelete.setForeground(Color.WHITE);
        btnDelete.setFocusPainted(false);
        btnDelete.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnDelete.setPreferredSize(new Dimension(150, 35));
        btnDelete.addActionListener(e -> deleteSale());
        fieldsPanel.add(btnDelete, gbc);

        gbc.gridy++;
        JButton btnClear = new JButton("🧹 Limpiar campos");
        btnClear.setFont(new Font("Segoe UI Emoji", Font.BOLD, 14));
        btnClear.setBackground(new Color(120, 120, 120));
        btnClear.setForeground(Color.WHITE);
        btnClear.setFocusPainted(false);
        btnClear.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnClear.setPreferredSize(new Dimension(150, 35));
        btnClear.addActionListener(e -> clearFields());
        fieldsPanel.add(btnClear, gbc);

        gbc.gridy++;
        JLabel lblBuscar = new JLabel("Buscar por ID o producto:");
        lblBuscar.setFont(new Font("Segoe UI Emoji", Font.BOLD, 14));
        fieldsPanel.add(lblBuscar, gbc);

        gbc.gridy++;
        txt_Search = new JTextField();
        txt_Search.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        txt_Search.setPreferredSize(new Dimension(100, 30));
        fieldsPanel.add(txt_Search, gbc);

        gbc.gridy++;
        JButton btnBuscar = new JButton("🔍 Buscar");
        btnBuscar.setFont(new Font("Segoe UI Emoji", Font.BOLD, 14));
        btnBuscar.setBackground(new Color(0, 91, 150));
        btnBuscar.setForeground(Color.WHITE);
        btnBuscar.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnBuscar.setFocusPainted(false);
        btnBuscar.setPreferredSize(new Dimension(150, 35));
        btnBuscar.addActionListener(e -> buscarVenta());
        fieldsPanel.add(btnBuscar, gbc);

        gbc.gridy++;
        JButton btnModificar = new JButton("✏ Modificar");
        btnModificar.setFont(new Font("Segoe UI Emoji", Font.BOLD, 14));
        btnModificar.setBackground(new Color(0, 128, 0));
        btnModificar.setForeground(Color.WHITE);
        btnModificar.setFocusPainted(false);
        btnModificar.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnModificar.setPreferredSize(new Dimension(150, 35));
        btnModificar.addActionListener(e -> modificarVenta());
        fieldsPanel.add(btnModificar, gbc);

        gbc.gridy++;
        JButton btnIrCompras = new JButton("🛒 Ir a Compras");
        btnIrCompras.setFont(new Font("Segoe UI Emoji", Font.BOLD, 14));
        btnIrCompras.setBackground(new Color(0, 91, 150));
        btnIrCompras.setForeground(Color.WHITE);
        btnIrCompras.setFocusPainted(false);
        btnIrCompras.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnIrCompras.setPreferredSize(new Dimension(180, 35));
        btnIrCompras.addActionListener(e -> mainWindow.setMainContent(new PurchasesPanel(mainWindow)));
        fieldsPanel.add(btnIrCompras, gbc);

        center.add(fieldsPanel, BorderLayout.EAST);
        contentPane.add(center, BorderLayout.CENTER);
    }

    // Métodos addSale, deleteSale, buscarVenta, modificarVenta, clearFields
    // se implementan con validaciones similares a PurchasesPanel (ya aplicadas)

}
